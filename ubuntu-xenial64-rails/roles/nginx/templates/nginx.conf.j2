user www-data;
pid /run/nginx/nginx.pid;
worker_processes auto;
worker_rlimit_nofile 409600;

events {
  worker_connections 4096;
  multi_accept on;
  use epoll;
}

http {
  charset utf-8;
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  types_hash_max_size 2048;
  server_tokens off;
  log_not_found off;
  keepalive_timeout 75;

  client_max_body_size 16M;
  client_body_buffer_size 128k;

  # mime
  include mime.types;
  default_type application/octet-stream;

  # cache
  proxy_cache_path /var/cache/nginx/cache levels=1:2 keys_zone={{ application.name }}:8m max_size=50m inactive=120m;
  proxy_temp_path /var/cache/nginx/tmp;

  proxy_redirect   off;
  proxy_set_header Host               $host;
  proxy_set_header X-Real-IP          $remote_addr;
  proxy_set_header X-Forwarded-Host   $host;
  proxy_set_header X-Forwarded-Server $host;
  proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;

  # include configs
  include /etc/nginx/conf.d/*.conf;

  # geolocation plugins
  geoip_country /usr/local/share/GeoIP/GeoIP.dat;
  geoip_city /usr/local/share/GeoIP/GeoLiteCity.dat;

  # logging
  log_format ltsv "remote_addr:$remote_addr\t"
                  "remote_user:$remote_user\t"
                  "time_local:$time_local\t"
                  "request:$request\t"
                  "status:$status\t"
                  "body_bytes_sent:$body_bytes_sent\t"
                  "http_refer:$http_referer\t"
                  "http_user_agent:$http_user_agent\t"
                  "request_time:$request_time\t"
                  "cache:$upstream_http_x_cache\t"
                  "runtime:$upstream_http_x_runtime\t"
                  "apptime:$upstream_response_time\t"
                  "vhost:$host\t"
                  "geoip_country_name:$geoip_city_country_name\t"
                  "geoip_country_code3:$geoip_city_country_code3\t"
                  "geoip_city:$geoip_city";

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log warn;

  #
  # DDos対策
  #
  # 同時接続数制限を行う際のメモリ領域を10MB確保
  limit_conn_zone $binary_remote_addr zone=limit_conn_{{ application.name }}:10m;

  # 1秒あたり50リクエストを超えるペースだと503を返す
  limit_req_zone $binary_remote_addr zone=limit_req_{{ application.name }}:10m rate=50r/s;

  server {
    listen 80;
    server_name www.{{ application.name }}.com;

    # headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-UA-Compatible "IE=Edge" always;
    add_header Cache-Control "no-transform" always;

    # gzip
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

    # . files
    location ~ /\. {
      deny all;
    }

    # assets, media
    location ~ ^/(assets|packs)/ {
      root /var/www/{{ application.name }}/current/public;
      expires 7d;
      access_log off;
    }

    # svg, fonts
    location ~* \.(?:svgz?|ttf|ttc|otf|eot|woff|woff2)$ {
      add_header Access-Control-Allow-Origin "*";
      expires 7d;
      access_log off;
    }

    location / {
      # 1つのIPからの同時接続数が100を超えると503が返る
      limit_conn limit_conn_{{ application.name }} 100;
      # 1秒あたり50リクエストを超えた場合、100リクエストまで待つ
      limit_req zone=limit_req_{{ application.name }} burst=100;

      proxy_pass http://{{ application.name }};
      proxy_cache {{ application.name }};
      proxy_cache_valid 200 302 60m;
      proxy_cache_valid 404 10m;
    }
  }

  # domain, subdomains redirect
  # server {
  #   listen 80;
  #   listen [::]:80;
  #
  #   server_name {{ application.name }} *.{{ application.name }}
  #
  #   return 301 http://{{ application.name }}$request_uri;
  # }

  upstream {{ application.name }} {
    server unix:/var/www/{{ application.name }}/shared/tmp/sockets/unicorn.sock;
  }
}
